cmake_minimum_required(VERSION 3.5)

project(pnc_map)

find_package(Protobuf REQUIRED)
find_package(gflags REQUIRED)
find_package(glog REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(Boost REQUIRED)
find_package(osqp REQUIRED)

set(proto_gen_folder ${CMAKE_CURRENT_LIST_DIR}/../build-special/proto)
set(proto_lib_folder ${CMAKE_CURRENT_LIST_DIR}/../build-special/lib)
set(pnc_common_folder ${CMAKE_CURRENT_LIST_DIR}/../common)

file(GLOB PNC_COMMON_FILES
    ${proto_gen_folder}/*.pb.cc
    ${pnc_common_folder}/*.c
    ${pnc_common_folder}/*.cc
    ${pnc_common_folder}/*/*.c
    ${pnc_common_folder}/*/*.cc
    ${pnc_common_folder}/*/*/*.c
    ${pnc_common_folder}/*/*/*.cc)

LIST(FILTER PNC_COMMON_FILES EXCLUDE REGEX ".+_test[.]+h")  #remove *_test.h
LIST(FILTER PNC_COMMON_FILES EXCLUDE REGEX ".+_test[.]+cc") #remove *_test.cc

include_directories(
    ${CMAKE_CURRENT_LIST_DIR}
    ${CMAKE_CURRENT_LIST_DIR}/../
    ${proto_gen_folder})


include_directories(${Boost_INCLUDE_DIRS})

# install to default directory using colcon
# install(TARGETS ${PROJECT_NAME} 
#         DESTINATION
#         ARCHIVE DESTINATION lib/${PROJECT_NAME}
#         LIBRARY DESTINATION lib/${PROJECT_NAME}
#         RUNTIME DESTINATION lib/${PROJECT_NAME})

# find_package(GTest REQUIRED)
# add_executable(pnc_map_test 
#                reference_line_test.cc
#                reference_line.cc
#                ${PNC_COMMON_FILES})
# target_link_libraries(pnc_map_test 
#                       gflags
#                       glog::glog
#                       Eigen3::Eigen
#                       ${Boost_LIBRARIES}
#                       osqp::osqp
#                       ${Protobuf_LIBRARIES}
#                       GTest::GTest
#                       GTest::Main
#                       ${GTEST_MAIN_LIBRARIES})